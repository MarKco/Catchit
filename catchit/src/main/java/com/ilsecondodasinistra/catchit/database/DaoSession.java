package com.ilsecondodasinistra.catchit.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.ilsecondodasinistra.catchit.database.trips;
import com.ilsecondodasinistra.catchit.database.stops;
import com.ilsecondodasinistra.catchit.database.stopTimes;
import com.ilsecondodasinistra.catchit.database.routes;
import com.ilsecondodasinistra.catchit.database.calendarDates;
import com.ilsecondodasinistra.catchit.database.calendar;
import com.ilsecondodasinistra.catchit.database.agency;

import com.ilsecondodasinistra.catchit.database.tripsDao;
import com.ilsecondodasinistra.catchit.database.stopsDao;
import com.ilsecondodasinistra.catchit.database.stopTimesDao;
import com.ilsecondodasinistra.catchit.database.routesDao;
import com.ilsecondodasinistra.catchit.database.calendarDatesDao;
import com.ilsecondodasinistra.catchit.database.calendarDao;
import com.ilsecondodasinistra.catchit.database.agencyDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig tripsDaoConfig;
    private final DaoConfig stopsDaoConfig;
    private final DaoConfig stopTimesDaoConfig;
    private final DaoConfig routesDaoConfig;
    private final DaoConfig calendarDatesDaoConfig;
    private final DaoConfig calendarDaoConfig;
    private final DaoConfig agencyDaoConfig;

    private final tripsDao tripsDao;
    private final stopsDao stopsDao;
    private final stopTimesDao stopTimesDao;
    private final routesDao routesDao;
    private final calendarDatesDao calendarDatesDao;
    private final calendarDao calendarDao;
    private final agencyDao agencyDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tripsDaoConfig = daoConfigMap.get(tripsDao.class).clone();
        tripsDaoConfig.initIdentityScope(type);

        stopsDaoConfig = daoConfigMap.get(stopsDao.class).clone();
        stopsDaoConfig.initIdentityScope(type);

        stopTimesDaoConfig = daoConfigMap.get(stopTimesDao.class).clone();
        stopTimesDaoConfig.initIdentityScope(type);

        routesDaoConfig = daoConfigMap.get(routesDao.class).clone();
        routesDaoConfig.initIdentityScope(type);

        calendarDatesDaoConfig = daoConfigMap.get(calendarDatesDao.class).clone();
        calendarDatesDaoConfig.initIdentityScope(type);

        calendarDaoConfig = daoConfigMap.get(calendarDao.class).clone();
        calendarDaoConfig.initIdentityScope(type);

        agencyDaoConfig = daoConfigMap.get(agencyDao.class).clone();
        agencyDaoConfig.initIdentityScope(type);

        tripsDao = new tripsDao(tripsDaoConfig, this);
        stopsDao = new stopsDao(stopsDaoConfig, this);
        stopTimesDao = new stopTimesDao(stopTimesDaoConfig, this);
        routesDao = new routesDao(routesDaoConfig, this);
        calendarDatesDao = new calendarDatesDao(calendarDatesDaoConfig, this);
        calendarDao = new calendarDao(calendarDaoConfig, this);
        agencyDao = new agencyDao(agencyDaoConfig, this);

        registerDao(trips.class, tripsDao);
        registerDao(stops.class, stopsDao);
        registerDao(stopTimes.class, stopTimesDao);
        registerDao(routes.class, routesDao);
        registerDao(calendarDates.class, calendarDatesDao);
        registerDao(calendar.class, calendarDao);
        registerDao(agency.class, agencyDao);
    }
    
    public void clear() {
        tripsDaoConfig.getIdentityScope().clear();
        stopsDaoConfig.getIdentityScope().clear();
        stopTimesDaoConfig.getIdentityScope().clear();
        routesDaoConfig.getIdentityScope().clear();
        calendarDatesDaoConfig.getIdentityScope().clear();
        calendarDaoConfig.getIdentityScope().clear();
        agencyDaoConfig.getIdentityScope().clear();
    }

    public tripsDao getTripsDao() {
        return tripsDao;
    }

    public stopsDao getStopsDao() {
        return stopsDao;
    }

    public stopTimesDao getStopTimesDao() {
        return stopTimesDao;
    }

    public routesDao getRoutesDao() {
        return routesDao;
    }

    public calendarDatesDao getCalendarDatesDao() {
        return calendarDatesDao;
    }

    public calendarDao getCalendarDao() {
        return calendarDao;
    }

    public agencyDao getAgencyDao() {
        return agencyDao;
    }

}
